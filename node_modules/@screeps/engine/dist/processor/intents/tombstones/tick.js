'use strict';

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _ = require('lodash'),
    utils = require('../../../utils'),
    driver = utils.getDriver(),
    C = driver.constants;

module.exports = function (object, roomObjects, roomTerrain, bulk, bulkUsers, roomController, gameTime) {
    if (!object.decayTime || gameTime >= object.decayTime - 1) {
        C.RESOURCES_ALL.forEach(function (resourceType) {
            if (object[resourceType] > 0) {
                var existingDrop = _.find(roomObjects, { type: 'energy', x: object.x, y: object.y, resourceType: resourceType });
                if (existingDrop) {
                    bulk.update(existingDrop, _defineProperty({}, resourceType, existingDrop[resourceType] + object[resourceType]));
                } else {
                    var _bulk$insert;

                    bulk.insert((_bulk$insert = {
                        type: 'energy',
                        x: object.x,
                        y: object.y,
                        room: object.room
                    }, _defineProperty(_bulk$insert, resourceType, object[resourceType]), _defineProperty(_bulk$insert, 'resourceType', resourceType), _bulk$insert));
                }
            }
        });

        bulk.remove(object._id);
        delete roomObjects[object._id];
    }
};
//# sourceMappingURL=../../../sourcemaps/processor/intents/tombstones/tick.js.map
