'use strict';

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _ = require('lodash'),
    utils = require('../../../utils'),
    driver = utils.getDriver(),
    C = driver.constants;

module.exports = function (object, roomObjects, bulk, stats, dropRate, gameTime) {

    if (dropRate === undefined) {
        dropRate = C.CREEP_CORPSE_RATE;
    }

    bulk.remove(object._id);
    delete roomObjects[object._id];

    var decayTime = object.body.length * C.TOMBSTONE_DECAY_PER_PART;
    if (object.tombstoneDecay) {
        decayTime = object.tombstoneDecay;
    }

    var tombstone = {
        type: 'tombstone',
        room: object.room,
        x: object.x,
        y: object.y,
        user: object.user,
        deathTime: gameTime,
        decayTime: gameTime + decayTime,
        creepId: "" + object._id,
        creepName: object.name,
        creepTicksToLive: object.ageTime - gameTime,
        creepBody: _.map(object.body, function (b) {
            return b.type;
        }),
        creepSaying: object.actionLog && object.actionLog.say && object.actionLog.say.isPublic ? object.actionLog.say.message : undefined
    };

    var container = _.find(roomObjects, { type: 'container', x: object.x, y: object.y });

    if (dropRate > 0 && !object.userSummoned) {
        var lifeTime = _.any(object.body, { type: C.CLAIM }) ? C.CREEP_CLAIM_LIFE_TIME : C.CREEP_LIFE_TIME;
        var bodyResources = { energy: utils.calcCreepCost(object.body) * dropRate * object._ticksToLive / lifeTime };

        object.body.forEach(function (i) {
            if (i.boost) {
                bodyResources[i.boost] = bodyResources[i.boost] || 0;
                bodyResources[i.boost] += C.LAB_BOOST_MINERAL * dropRate * object._ticksToLive / lifeTime;
                bodyResources.energy += C.LAB_BOOST_ENERGY * dropRate * object._ticksToLive / lifeTime;
            }
        });

        _.forEach(bodyResources, function (amount, resourceType) {
            amount = Math.floor(amount);
            if (amount > 0) {
                if (container && container.hits > 0) {
                    var targetTotal = utils.calcResources(container);
                    var toContainerAmount = Math.min(amount, container.energyCapacity - targetTotal);
                    if (toContainerAmount > 0) {
                        container[resourceType] = container[resourceType] || 0;
                        container[resourceType] += toContainerAmount;
                        bulk.update(container, _defineProperty({}, resourceType, container[resourceType]));
                        amount -= toContainerAmount;
                    }
                }
                if (amount > 0) {
                    tombstone[resourceType] = (tombstone[resourceType] || 0) + amount;
                }
            }
        });

        C.RESOURCES_ALL.forEach(function (resourceType) {
            if (object[resourceType] > 0) {
                var amount = object[resourceType];
                if (container && container.hits > 0) {
                    var targetTotal = utils.calcResources(container);
                    var toContainerAmount = Math.min(amount, container.energyCapacity - targetTotal);
                    if (toContainerAmount > 0) {
                        container[resourceType] = container[resourceType] || 0;
                        container[resourceType] += toContainerAmount;
                        bulk.update(container, _defineProperty({}, resourceType, container[resourceType]));
                        amount -= toContainerAmount;
                    }
                }
                if (amount > 0) {
                    tombstone[resourceType] = (tombstone[resourceType] || 0) + amount;
                }
            }
        });
    }

    bulk.insert(tombstone);

    if (stats && object.user != '3' && object.user != '2') {
        stats.inc('creepsLost', object.user, object.body.length);
    }
};
//# sourceMappingURL=../../../sourcemaps/processor/intents/creeps/_die.js.map
